#!/usr/bin/env python# -*- coding: utf-8 -*-# Created by spider3 on 2018/3/16# Copyright (c) 2018 spider3. All rights reserved."""用来补充确实信息，一般官网只有门店地址，电话，名字"""import jsonimport requestsfrom .get_baidu_coord import BaiduCoordfrom .get_address_by_ten_coord import get_address_by_ten_coordfrom .get_region_id import get_region_iddef add_detail(start_id, brand_id, old_dir, new_dir):    """    用来填充未完整的信息，并保存至new_dir    :param start_id: 开始id编号，查数据库得    :param brand_id: 品牌id    :param old_dir: 读取文件路劲及文件名    :param new_dir: 输出文件路劲及文件名    :return:    """    with open(old_dir, 'r') as f:        data = json.loads(f.read())    id = start_id    for one_data in data:  # 遍历每条数据，进行补充        one_data['id'] = id        id += 1        if 'phone_number' not in one_data or one_data['phone_number'] is None:  # 无phone_number字段也可以            one_data['phone_number'] = 0        if 'preview_image' not in one_data.keys():  # 没有自己维护图片时候自动维护            one_data['preview_image'] = 'brands_images/full/{}.jpg'.format(brand_id)        one_data['brand_id'] = brand_id        one_data['create_time'] = 'NOW()'        # 获取经纬度        try:            bc = BaiduCoord(one_data['address'])            if 'city' in one_data:  # 如果有地域限制                bc = BaiduCoord(one_data['address'], one_data['city'])            ten_coord = bc.get_ten_coord()            jw_coord = bc.get_jw_coord()            # 如果经纬度原来就有,则不添加            if 'longitude' not in one_data.keys() or 'latitude' not in one_data.keys():                one_data['longitude'] = jw_coord['x']                one_data['latitude'] = jw_coord['y']                one_data['official_coord'] = 0            else:  # 已经有地址，则维护字段official_coord，证明是在官网获取                one_data['official_coord'] = 1                # 官网维护经纬度，如果没有区信息则用经纬度获取区信息                if 'district' not in one_data:                    one_data['district'] = get_regions("{},{}".format(one_data['longitude'], one_data['latitude']))            if not bc.district:  # 如果高德api中没有记录到区信息，则到百度中获取                qu = get_address_by_ten_coord(ten_coord['x'], ten_coord['y'])                qu = qu['address_detail']['district']            else:                qu = bc.district            if 'district' in one_data:  # 如果数据里面直接记录着区信息就用记录的                qu = one_data['district']            one_data['region_id_1'] = 0            one_data['region_id_2'] = 0            one_data['region_id_3'] = 0            try:                regionid1, regionid2, regionid3 = get_region_id(qu)                one_data['region_id_1'] = regionid1                one_data['region_id_2'] = regionid2                one_data['region_id_3'] = regionid3            except:                pass        except:            # 同上，如果经纬度原来就有,则不改为0            if 'longitude' not in one_data.keys() or 'latitude' not in one_data.keys():                one_data['longitude'] = 0                one_data['latitude'] = 0                one_data['official_coord'] = 0            else:  # 已经有地址，则维护字段official_coord，证明是在官网获取                one_data['official_coord'] = 1                # 官网维护经纬度，如果没有区信息则用经纬度获取区信息                if 'district' not in one_data:                    one_data['district'] = get_regions("{},{}".format(one_data['longitude'], one_data['latitude']))            one_data['region_id_1'] = 0            one_data['region_id_2'] = 0            one_data['region_id_3'] = 0            if 'district' in one_data:                qu = one_data['district']            try:                regionid1, regionid2, regionid3 = get_region_id(qu)                one_data['region_id_1'] = regionid1                one_data['region_id_2'] = regionid2                one_data['region_id_3'] = regionid3            except:                pass        print(one_data)    try:        with open(new_dir, 'w') as f:            f.write(json.dumps(data, ensure_ascii=False))    except Exception as e:        with open(new_dir, 'w') as f:            f.write(json.dumps(data))# 根据坐标获取区def get_regions(baidu_coord):    """    百度坐标获取区信息，返回区    :param location:  百度坐标    :return:  区    """    gaode_coord = baidu2gaode(baidu_coord)    data = {"key": "5f2e9ed810bca7a99abc98f3808afce5", "location": gaode_coord}    url = "http://restapi.amap.com/v3/place/around"    response = requests.get(url, data)    response = json.loads(response.text)    adname = response['pois'][0]['adname']    return adnamedef baidu2gaode(baidu_coord):    """    百度坐标转高德坐标    :param baidu_coord:百度坐标    :return: 高德坐标    """    url = 'http://restapi.amap.com/v3/assistant/coordinate/convert'    data = {        'locations': baidu_coord,        'key': '5f2e9ed810bca7a99abc98f3808afce5',        'coordsys': 'baidu'    }    response = requests.get(url, data)    response = json.loads(response.text)    return response['locations']def main():    get_regions('116.403838,39.915156')if __name__ == '__main__':    main()