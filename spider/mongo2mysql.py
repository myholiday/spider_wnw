#!/usr/bin/env python# -*- coding: utf-8 -*-# Created by spider3 on 2018/3/28# Copyright (c) 2018 spider3. All rights reserved.import pymysqlimport requestsimport jsonimport osfrom retry import retryfrom requests.exceptions import ConnectionErrorfrom pymongo import MongoClientfrom utils.save_pic import save_picfrom utils.get_region_id import get_region_idfrom utils.save2mysql import save2mysqldef get_logo_pwd(brand_id):    """    输入brand_id,查询mysql中默认图片路径    :param brand_id:    :return:  默认图片路径    """    connection = pymysql.connect(host='localhost', user='root', password='root', db='qianxungou', port=3306, charset='utf8')    with connection.cursor() as cursor:        get_logo_sql = 'SELECT `logo` FROM `feigo_brands` WHERE `id`={}'.format(brand_id)        cursor.execute(get_logo_sql)        logo = cursor.fetchall()        print(logo[0][0])        return logo[0][0]# 默认set_name为brand_iddef mongo2mysql(start_id, set_name, brand_id=None):    """    将MongoDB的数据导入mysql    :param start_id:  起始id    :param set_name:   集合名字，一般设为brand_id    :param brand_id:   如果集合名字不是brand_id的时候，设置这个字段    :return:    """    if not brand_id:  # 如果没有输入brand_id则为数据集合名字        brand_id = int(set_name[1:])    start_id = start_id    conn = MongoClient('localhost', 27017)    db = conn.amap_data    my_set = eval('db.{}'.format(set_name))    all_data = list(my_set.find())    # 默认图片路径    logo_pwd = get_logo_pwd(brand_id)    # 记录amap_id    amap_ids = []    repeat_indexs = []  # 用于删除重复数据    # 遍历，添加详细信息    index = 0    for one_data in all_data:        # 如果已经储存，那么就不存这条数据了        if one_data['id'] in amap_ids:            repeat_indexs.append(index)            index += 1            continue        index += 1        amap_ids.append(one_data['id'])        one_data['amap_id'] = one_data['id']        one_data['id'] = start_id        start_id += 1        one_data['brand_id'] = brand_id        one_data['official_coord'] = 2  # 表示从高德爬取        one_data['create_time'] = 'NOW()'        one_data['address'] = one_data['address'] if one_data['address'] else " "        # 把电话号码中的'-'删除，用'/'代替';'隔开        one_data['phone_number'] = one_data['tel'].replace('-', '').replace(';', '/') if one_data['tel'] else ''        # 将高德经纬度转成百度经纬度        baidu_jw = jw_amap2baidu(one_data['location'])        one_data['longitude'], one_data['latitude'] = baidu_jw['x'], baidu_jw['y']        # 获取省市区        one_data['region_id_1'], one_data['region_id_2'], one_data['region_id_3'] = get_region_id(one_data["adname"])        # if one_data['photos']:  # 如果有图片        #     # 用高德地图最后名字为图片名字        #     img_list = ['shop-images/{}/{}.jpg'.format(brand_id, url['url'].split('/')[-1].strip(".jpg")) for url in one_data['photos']]        #     one_data['preview_image'] = ",".join(img_list)        #     # 下载图片        #     for i in range(len(img_list)):        #         try:        #             save_pic(one_data['photos'][i]['url'], "F:\\", img_list[i])        #         except FileNotFoundError:  # 没有该文件夹,则创建对应brand_id的文件夹，然后再保存一次        #             os.makedirs('F:\\shop-images\\{}\\'.format(brand_id))        #             save_pic(one_data['photos'][i]['url'], "F:\\", img_list[i])        # else:  # 如果没有图片        #     one_data['preview_image'] = 'brands_images/full/{}.png'.format(brand_id)        one_data['preview_image'] = logo_pwd    # 删除重复数据    repeat_indexs.reverse()    for index in repeat_indexs:        del all_data[index]    print(len(all_data))    save2mysql("localhost", "root", "root", "my_test", "feigo_shops", all_data)    return start_id + 1  # 返回下次id@retry(ConnectionError, 4)def jw_amap2baidu(amap_jw):    """将高德地图经纬度转换成百度地图经纬度"""    url = 'http://api.map.baidu.com/geoconv/v1/'    data = {"from": 3, "to": 5, "ak": "mDml72vqmPtHmZHl7tus153lx9e1pg8A", "coords": amap_jw}    response = requests.get(url, data)    response_json = json.loads(response.text)    print(response_json['result'][0])    return response_json['result'][0]def main():    start_id = 449271    for set_id in range(350, 500):  # 上次到349        set_id_str = 'd%.4d' % set_id        print(set_id_str, set_id)        try:            start_id = mongo2mysql(start_id, set_id_str, set_id)        except IndexError as e:            print("========%s=========" % set_id)            continue    # mongo2mysql(99999, "d0001", 1)if __name__ == '__main__':    main()