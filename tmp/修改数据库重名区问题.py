#!/usr/bin/env python# -*- coding: utf-8 -*-# Created by spider3 on 2018/5/12# Copyright (c) 2018 spider3. All rights reserved.import pymysqlimport jsonimport requestsimport timefrom utils.get_region_id import get_region_id_by_adcodedef get_all_rename_region(connection,id):    """    传入region_id_3返回重复值的id    :param connection:    :param id:    :return:    """    sql = "SELECT `id`,`amap_id` FROM `feigo_shops` WHERE `region_id_3`={} AND `amap_id` != '0' ".format(id)    with connection.cursor() as cursor:        cursor.execute(sql)        data = cursor.fetchall()        print(data)        # print(data[0][])    return datadef get_update_sql(data):    """    返回update sql语句    :param data:    :return:    """    url = "http://restapi.amap.com/v3/place/detail?key=5f2e9ed810bca7a99abc98f3808afce5&id={}".format(data[1])    try:        response = requests.get(url)    except Exception as e:        time.sleep(1)        response = requests.get(url)    dict_response = json.loads(response.text)    try:        adcode = dict_response['pois'][0]['adcode']    except Exception as e:        print("{}错误".format(data))        return " "    r_1, r_2, r_3 = 0, 0, adcode    try:        r_1, r_2, r_3 = get_region_id_by_adcode(adcode, dict_response['pois'][0]['address'], dict_response['pois'][0]['location'])    except Exception as e:        print("{}错误".format(data))        return " "    # 组成updata语句    update_sql = "UPDATE `feigo_shops` SET `region_id_1`={},`region_id_2`={},`region_id_3`={} WHERE `id`={};\n".format(r_1, r_2, r_3, data[0])    print(update_sql)    return update_sqldef main():    connection = pymysql.connect(host='localhost',                                 user='root',                                 password='root',                                 db='qianxungou',                                 port=3306,                                 charset='utf8')    # get_all_rename_region(connection, 230402)    chongfu_ids = [230402, 230404, 230406, 140302, 140303, 140311, 110105, 511002, 712222, 110112, 712229, 130602, 710701, 710702, 621102, 441905, 441907, 441908, 130102, 441911, 130104, 130105, 441913, 441917, 710206, 441925, 620102, 441926, 713800, 500301, 330322, 330324, 150102, 330328, 330329, 410204, 231005, 320612, 350822, 230506, 320106, 371312, 140402, 810101, 320117, 810103, 810104, 320118, 712823, 140411, 511102, 712321, 712327, 712331, 130702, 130703, 220302, 220303, 442004, 330903, 450202, 710301, 441502, 710816, 710305, 510113, 710307, 442020, 360103, 710827, 210102, 210106, 150204, 320706, 230606, 430802, 140502, 370902, 713433, 370402, 340711, 510183, 220403, 710402, 710403, 211204, 710404, 710405, 420107, 420113, 420117, 710422, 210202, 710427, 710429, 611101, 410402, 320802, 120101, 120102, 320302, 440111, 120114, 120115, 610102, 350527, 810304, 713024, 713026, 610116, 712532, 130902, 630103, 310107, 510304, 310113, 310116, 710501, 710502, 710504, 710508, 710514, 650104, 330106, 210302, 210303, 710528, 710529, 150404, 500105, 500111, 500114, 230803, 350102, 230811, 120223, 120225, 140202, 140203, 350122, 520113, 370103, 510402, 510403, 130502, 130503, 220104, 540102, 710601, 710602, 710101, 210902, 710103, 710104, 710105, 710106, 710102, 210904, 330205, 713700, 440305, 230902, 410106]    all_data = []    for chongfu_id in chongfu_ids:        all_data.extend(get_all_rename_region(connection, chongfu_id))    with open("../data/update2.sql", "w") as f:        for one_data in all_data:            update_sql = get_update_sql(one_data)            f.write(update_sql)    # get_update_sql((277534, 'B03018NDPM'))    # print(all_data)    # print(len(all_data))if __name__ == '__main__':    main()